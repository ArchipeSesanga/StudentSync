@model PaginatedList<Consumer>

@{
    ViewData["Title"] = "Consumer List";
    
    if (User.IsInRole("Admin"))
    {
        Layout = "_AdminLayout";
    }
    else if (User.IsInRole("Student"))
    {
        Layout = "_StudentLayout";
    }
    else
    {
        Layout = "_ConsumerLayout";
    }
}

<h1>Consumer List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Consumer Number: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ConsumerIdSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Consumer Number</a>
            </th>
            <th>
                First Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Registration Date</a>
            </th>
            <th>Photo</th>
            <th>Email</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ConsumerId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>

                <td width="25%"><img src="~/@WebConstants.ImagePath/@item.Photo" asp-append-version="true" width="100" style="border-radius:5px; border:1px solid #bbb" alt="" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ConsumerId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ConsumerId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ConsumerId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData[" CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData[" CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData[" CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData[" CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>